// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskHub.Database;

#nullable disable

namespace TaskHub.Migrations
{
    [DbContext(typeof(TaskHubDbcontext))]
    partial class TaskHubDbcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TaskHub.Models.Comentariu", b =>
                {
                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("IdTask")
                        .HasColumnType("int");

                    b.Property<int?>("IdUtilizator")
                        .HasColumnType("int");

                    b.Property<string>("Continut")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id", "IdTask", "IdUtilizator");

                    b.HasIndex("IdTask");

                    b.HasIndex("IdUtilizator");

                    b.ToTable("Comentarii");
                });

            modelBuilder.Entity("TaskHub.Models.Echipa", b =>
                {
                    b.Property<int?>("IdUtilizator")
                        .HasColumnType("int");

                    b.Property<int?>("IdProiect")
                        .HasColumnType("int");

                    b.Property<string>("RolInProiect")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("IdUtilizator", "IdProiect");

                    b.HasIndex("IdProiect");

                    b.ToTable("Echipe");
                });

            modelBuilder.Entity("TaskHub.Models.Proiect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descriere")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NumeProiect")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Proiecte");
                });

            modelBuilder.Entity("TaskHub.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ContinutMedia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataFinalizare")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descriere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProiectId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titlu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ProiectId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TaskHub.Models.Utilizator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Utilizatori");
                });

            modelBuilder.Entity("TaskHub.Models.Comentariu", b =>
                {
                    b.HasOne("TaskHub.Models.Task", "Task")
                        .WithMany("Comentarii")
                        .HasForeignKey("IdTask")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskHub.Models.Utilizator", "Utilizator")
                        .WithMany("Comentarii")
                        .HasForeignKey("IdUtilizator")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");

                    b.Navigation("Utilizator");
                });

            modelBuilder.Entity("TaskHub.Models.Echipa", b =>
                {
                    b.HasOne("TaskHub.Models.Proiect", "Proiect")
                        .WithMany("Echipe")
                        .HasForeignKey("IdProiect")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskHub.Models.Utilizator", "Utilizator")
                        .WithMany("Echipe")
                        .HasForeignKey("IdUtilizator")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proiect");

                    b.Navigation("Utilizator");
                });

            modelBuilder.Entity("TaskHub.Models.Task", b =>
                {
                    b.HasOne("TaskHub.Models.Proiect", "Proiect")
                        .WithMany("Tasks")
                        .HasForeignKey("ProiectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proiect");
                });

            modelBuilder.Entity("TaskHub.Models.Proiect", b =>
                {
                    b.Navigation("Echipe");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("TaskHub.Models.Task", b =>
                {
                    b.Navigation("Comentarii");
                });

            modelBuilder.Entity("TaskHub.Models.Utilizator", b =>
                {
                    b.Navigation("Comentarii");

                    b.Navigation("Echipe");
                });
#pragma warning restore 612, 618
        }
    }
}
