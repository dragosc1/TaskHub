@model TaskHub.Models.Task
<h2> Formular editare task</h2>
@using (Html.BeginForm(actionName: "Edit", controllerName: "Tasks", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.ProiectId)
    @Html.HiddenFor(model => model.Status);
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
    <hr />

    <div class="form-group">
        @Html.LabelFor(model => model.Titlu, "Titlul Taskului")
        @Html.TextBoxFor(model => model.Titlu, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Titlu, "", new { @class = "text-danger" })
    </div>
    <br />

    <div class="form-group">
        @Html.LabelFor(model => model.Descriere, "Descrierea Taskului")
        @Html.TextBoxFor(model => model.Descriere, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Descriere, "", new { @class = "text-danger" })
    </div>
    <br />
    <div class="form-group">
        @Html.LabelFor(model => model.DataStart, "Data inceput al Taskului")
        @Html.EditorFor(model => model.DataStart, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.DataStart, "", new { @class = "text-danger" })
    </div>
    <br />
    <div class="form-group">
        @Html.LabelFor(model => model.DataFinalizare, "Data finalizare al Taskului")
        @Html.EditorFor(model => model.DataFinalizare, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.DataFinalizare, "", new { @class = "text-danger" })
    </div>
    <br />
    <input class="form-control" type="file" name="TaskContent">
    <br />
    <br />
    <button class="btn btn-success" type="submit">Modifica Taskul</button>
}